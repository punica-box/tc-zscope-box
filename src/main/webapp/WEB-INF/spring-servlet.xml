<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
      					http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
      					http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<!-- 对转向页面的路径解析。prefix：前缀， suffix：后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" /><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>
	<!-- 完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!-- 自动扫描的包名 -->
	<context:component-scan base-package="com.doukids"></context:component-scan>

	<!-- 默认的注解映射的支持 -->

	<mvc:default-servlet-handler />
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="objectMapper" ref="customObjectMapper"></property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="UTF8StringHttpMessageConverter" />
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>

		</property>
	</bean>

	<bean id="UTF8StringHttpMessageConverter" class="com.doukids.web.utils.UTF8StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=utf-8</value>
				<value>text/html;charset=utf-8</value>
				<value>text/json;charset=utf-8</value>
				<value>application/json;charset=utf-8</value>
				<value>application/x-www-form-urlencoded;charset=utf-8</value>
			</list>
		</property>
	</bean>
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
			    <value>text/plain;charset=UTF-8</value> 
				<value>text/json;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			    <value>application/x-www-form-urlencoded;charset=UTF-8</value>
			</list>
		</property>
		<property name="objectMapper" ref="customObjectMapper"></property>
	</bean>
	<bean id="customObjectMapper" class="org.codehaus.jackson.impl.DateJsonObjectMapper"></bean>

	<!-- 支持上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" />
		<property name="maxInMemorySize" value="4096" />
	</bean>
	
	<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
	<mvc:interceptors>   
	    <mvc:interceptor>    
	        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
	        <mvc:mapping path="/**"/> 
	        <bean class="com.doukids.web.controller.interceptor.LogInterceptor"></bean>  
	    </mvc:interceptor>  
	</mvc:interceptors>  
</beans>